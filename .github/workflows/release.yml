name: Regular Release

on:
    push:
      tags:
        - 'v*'
      branches:
        - 'main'
      
    workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
      
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --icon=ClipGen.ico --name=ClipGen ClipGen.py
      
    - name: Create release package
      run: |
        mkdir ClipGen
        cp dist/ClipGen.exe ClipGen/
        cp config_*.json ClipGen/
        cp README.md ClipGen/
        cp -r libs ClipGen/
        Compress-Archive -Path ClipGen/* -DestinationPath ClipGen-${{ github.ref_name }}.zip
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}  # Используем имя тега из пуша
        files: ClipGen-${{ github.ref_name }}.zip
        draft: false
        prerelease: false
        name: "Release: ClipGen ${{ github.ref_name }}"
        body: |
          # ClipGen ${{ github.ref_name }}
          
          Автоматически собранный релиз ClipGen.
          
          ## Установка
          1. Скачайте архив
          2. Распакуйте в удобное место
          3. Запустите ClipGen.exe
          4. Добавьте свой API ключ Google Gemini в config файл